// api/proto/database/database.proto

syntax = "proto3";

package databasepb;

option go_package = "oda-v1/api/proto/database;databasepb";

service DatabaseService {
  rpc CreatePlayer(CreatePlayerRequest) returns (Player);
  rpc GetPlayer(GetPlayerRequest) returns (Player);
  rpc UpdatePlayerProgress(UpdatePlayerProgressRequest) returns (Player);
  
  rpc CreateCase(CreateCaseRequest) returns (Case);
  rpc GetCase(GetCaseRequest) returns (Case);
  rpc ListCases(ListCasesRequest) returns (CaseList);
  
  rpc AssignCaseToPlayer(AssignCaseRequest) returns (PlayerCase);
  rpc GetPlayerCase(GetPlayerCaseRequest) returns (PlayerCase);
  
  rpc ListEvidence(ListEvidenceRequest) returns (EvidenceList);
  rpc ListSuspects(ListSuspectsRequest) returns (SuspectList);
  rpc GetInterrogationQuestions(GetInterrogationQuestionsRequest) returns (InterrogationQuestionList);

  rpc ListLocations(ListLocationsRequest) returns (LocationList);
   
  rpc SolveCase(SolveCaseRequest) returns (SolutionResult);
}

message Player {
  string id = 1;
  string name = 2;
  int32 cases_solved = 3;
}

message CreatePlayerRequest {
  string name = 1;
}

message GetPlayerRequest {
  string id = 1;
}

message UpdatePlayerProgressRequest {
  string id = 1;
  bool case_solved = 2;
}

message Case {
  string id = 1;
  string title = 2;
  string description = 3;
}

message CreateCaseRequest {
  string title = 1;
  string description = 2;
}

message GetCaseRequest {
  string id = 1;
}

message ListCasesRequest {}

message CaseList {
  repeated Case cases = 1;
}

message PlayerCase {
  string id = 1;
  string player_id = 2;
  string case_id = 3;
  string status = 4;
}

message AssignCaseRequest {
  string player_id = 1;
  string case_id = 2;
}

message GetPlayerCaseRequest {
  string player_id = 1;
  string case_id = 2;
}

message Evidence {
  string id = 1;
  string case_id = 2;
  string description = 3;
  string location = 4;
}

message ListEvidenceRequest {
  string case_id = 1;
}

message EvidenceList {
  repeated Evidence evidence = 1;
}

message Suspect {
  string id = 1;
  string case_id = 2;
  string name = 3;
  string description = 4;
}

message ListSuspectsRequest {
  string case_id = 1;
}

message SuspectList {
  repeated Suspect suspects = 1;
}

message InterrogationQuestion {
  string id = 1;
  string suspect_id = 2;
  string question = 3;
  string answer = 4;
}

message GetInterrogationQuestionsRequest {
  string suspect_id = 1;
}

message InterrogationQuestionList {
  repeated InterrogationQuestion questions = 1;
}


message Location {
  string name = 1;
}

message ListLocationsRequest {
  string case_id = 1;
}

message LocationList {
  repeated Location locations = 1;
}


message SolveCaseRequest {
  string player_case_id = 1;
  string proposed_solution = 2;
}

message SolutionResult {
  bool is_correct = 1;
  string feedback = 2;
}
