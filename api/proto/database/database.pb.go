// api/proto/database/database.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: database/database.proto

package databasepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CasesSolved int32  `protobuf:"varint,3,opt,name=cases_solved,json=casesSolved,proto3" json:"cases_solved,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetCasesSolved() int32 {
	if x != nil {
		return x.CasesSolved
	}
	return 0
}

type CreatePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreatePlayerRequest) Reset() {
	*x = CreatePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerRequest) ProtoMessage() {}

func (x *CreatePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerRequest.ProtoReflect.Descriptor instead.
func (*CreatePlayerRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePlayerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlayerRequest) Reset() {
	*x = GetPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRequest) ProtoMessage() {}

func (x *GetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlayerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdatePlayerProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CaseSolved bool   `protobuf:"varint,2,opt,name=case_solved,json=caseSolved,proto3" json:"case_solved,omitempty"`
}

func (x *UpdatePlayerProgressRequest) Reset() {
	*x = UpdatePlayerProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerProgressRequest) ProtoMessage() {}

func (x *UpdatePlayerProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlayerProgressRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePlayerProgressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePlayerProgressRequest) GetCaseSolved() bool {
	if x != nil {
		return x.CaseSolved
	}
	return false
}

type Case struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Case) Reset() {
	*x = Case{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Case) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Case) ProtoMessage() {}

func (x *Case) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Case.ProtoReflect.Descriptor instead.
func (*Case) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{4}
}

func (x *Case) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Case) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Case) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateCaseRequest) Reset() {
	*x = CreateCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCaseRequest) ProtoMessage() {}

func (x *CreateCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCaseRequest.ProtoReflect.Descriptor instead.
func (*CreateCaseRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCaseRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCaseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCaseRequest) Reset() {
	*x = GetCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaseRequest) ProtoMessage() {}

func (x *GetCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaseRequest.ProtoReflect.Descriptor instead.
func (*GetCaseRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{6}
}

func (x *GetCaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCasesRequest) Reset() {
	*x = ListCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCasesRequest) ProtoMessage() {}

func (x *ListCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCasesRequest.ProtoReflect.Descriptor instead.
func (*ListCasesRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{7}
}

type CaseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cases []*Case `protobuf:"bytes,1,rep,name=cases,proto3" json:"cases,omitempty"`
}

func (x *CaseList) Reset() {
	*x = CaseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseList) ProtoMessage() {}

func (x *CaseList) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseList.ProtoReflect.Descriptor instead.
func (*CaseList) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{8}
}

func (x *CaseList) GetCases() []*Case {
	if x != nil {
		return x.Cases
	}
	return nil
}

type PlayerCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CaseId   string `protobuf:"bytes,3,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Status   string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PlayerCase) Reset() {
	*x = PlayerCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerCase) ProtoMessage() {}

func (x *PlayerCase) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerCase.ProtoReflect.Descriptor instead.
func (*PlayerCase) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerCase) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerCase) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerCase) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *PlayerCase) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AssignCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CaseId   string `protobuf:"bytes,2,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *AssignCaseRequest) Reset() {
	*x = AssignCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignCaseRequest) ProtoMessage() {}

func (x *AssignCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignCaseRequest.ProtoReflect.Descriptor instead.
func (*AssignCaseRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{10}
}

func (x *AssignCaseRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *AssignCaseRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type GetPlayerCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CaseId   string `protobuf:"bytes,2,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *GetPlayerCaseRequest) Reset() {
	*x = GetPlayerCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayerCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerCaseRequest) ProtoMessage() {}

func (x *GetPlayerCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerCaseRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerCaseRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlayerCaseRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetPlayerCaseRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type Evidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CaseId      string `protobuf:"bytes,2,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Location    string `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{12}
}

func (x *Evidence) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Evidence) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *Evidence) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Evidence) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ListEvidenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId string `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *ListEvidenceRequest) Reset() {
	*x = ListEvidenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEvidenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEvidenceRequest) ProtoMessage() {}

func (x *ListEvidenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEvidenceRequest.ProtoReflect.Descriptor instead.
func (*ListEvidenceRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{13}
}

func (x *ListEvidenceRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type EvidenceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evidence []*Evidence `protobuf:"bytes,1,rep,name=evidence,proto3" json:"evidence,omitempty"`
}

func (x *EvidenceList) Reset() {
	*x = EvidenceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvidenceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceList) ProtoMessage() {}

func (x *EvidenceList) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceList.ProtoReflect.Descriptor instead.
func (*EvidenceList) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{14}
}

func (x *EvidenceList) GetEvidence() []*Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type Suspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CaseId      string `protobuf:"bytes,2,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Suspect) Reset() {
	*x = Suspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Suspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suspect) ProtoMessage() {}

func (x *Suspect) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suspect.ProtoReflect.Descriptor instead.
func (*Suspect) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{15}
}

func (x *Suspect) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Suspect) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *Suspect) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Suspect) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ListSuspectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId string `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *ListSuspectsRequest) Reset() {
	*x = ListSuspectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSuspectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSuspectsRequest) ProtoMessage() {}

func (x *ListSuspectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSuspectsRequest.ProtoReflect.Descriptor instead.
func (*ListSuspectsRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{16}
}

func (x *ListSuspectsRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type SuspectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suspects []*Suspect `protobuf:"bytes,1,rep,name=suspects,proto3" json:"suspects,omitempty"`
}

func (x *SuspectList) Reset() {
	*x = SuspectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspectList) ProtoMessage() {}

func (x *SuspectList) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspectList.ProtoReflect.Descriptor instead.
func (*SuspectList) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{17}
}

func (x *SuspectList) GetSuspects() []*Suspect {
	if x != nil {
		return x.Suspects
	}
	return nil
}

type InterrogationQuestion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SuspectId string `protobuf:"bytes,2,opt,name=suspect_id,json=suspectId,proto3" json:"suspect_id,omitempty"`
	Question  string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Answer    string `protobuf:"bytes,4,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *InterrogationQuestion) Reset() {
	*x = InterrogationQuestion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterrogationQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterrogationQuestion) ProtoMessage() {}

func (x *InterrogationQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterrogationQuestion.ProtoReflect.Descriptor instead.
func (*InterrogationQuestion) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{18}
}

func (x *InterrogationQuestion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InterrogationQuestion) GetSuspectId() string {
	if x != nil {
		return x.SuspectId
	}
	return ""
}

func (x *InterrogationQuestion) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *InterrogationQuestion) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type GetInterrogationQuestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuspectId string `protobuf:"bytes,1,opt,name=suspect_id,json=suspectId,proto3" json:"suspect_id,omitempty"`
}

func (x *GetInterrogationQuestionsRequest) Reset() {
	*x = GetInterrogationQuestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterrogationQuestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterrogationQuestionsRequest) ProtoMessage() {}

func (x *GetInterrogationQuestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterrogationQuestionsRequest.ProtoReflect.Descriptor instead.
func (*GetInterrogationQuestionsRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{19}
}

func (x *GetInterrogationQuestionsRequest) GetSuspectId() string {
	if x != nil {
		return x.SuspectId
	}
	return ""
}

type InterrogationQuestionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*InterrogationQuestion `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *InterrogationQuestionList) Reset() {
	*x = InterrogationQuestionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterrogationQuestionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterrogationQuestionList) ProtoMessage() {}

func (x *InterrogationQuestionList) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterrogationQuestionList.ProtoReflect.Descriptor instead.
func (*InterrogationQuestionList) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{20}
}

func (x *InterrogationQuestionList) GetQuestions() []*InterrogationQuestion {
	if x != nil {
		return x.Questions
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{21}
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListLocationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId string `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *ListLocationsRequest) Reset() {
	*x = ListLocationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationsRequest) ProtoMessage() {}

func (x *ListLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationsRequest.ProtoReflect.Descriptor instead.
func (*ListLocationsRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{22}
}

func (x *ListLocationsRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type LocationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locations []*Location `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
}

func (x *LocationList) Reset() {
	*x = LocationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationList) ProtoMessage() {}

func (x *LocationList) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationList.ProtoReflect.Descriptor instead.
func (*LocationList) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{23}
}

func (x *LocationList) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type SolveCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerCaseId     string `protobuf:"bytes,1,opt,name=player_case_id,json=playerCaseId,proto3" json:"player_case_id,omitempty"`
	ProposedSolution string `protobuf:"bytes,2,opt,name=proposed_solution,json=proposedSolution,proto3" json:"proposed_solution,omitempty"`
}

func (x *SolveCaseRequest) Reset() {
	*x = SolveCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolveCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveCaseRequest) ProtoMessage() {}

func (x *SolveCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveCaseRequest.ProtoReflect.Descriptor instead.
func (*SolveCaseRequest) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{24}
}

func (x *SolveCaseRequest) GetPlayerCaseId() string {
	if x != nil {
		return x.PlayerCaseId
	}
	return ""
}

func (x *SolveCaseRequest) GetProposedSolution() string {
	if x != nil {
		return x.ProposedSolution
	}
	return ""
}

type SolutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCorrect bool   `protobuf:"varint,1,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
	Feedback  string `protobuf:"bytes,2,opt,name=feedback,proto3" json:"feedback,omitempty"`
}

func (x *SolutionResult) Reset() {
	*x = SolutionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_database_database_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolutionResult) ProtoMessage() {}

func (x *SolutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_database_database_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolutionResult.ProtoReflect.Descriptor instead.
func (*SolutionResult) Descriptor() ([]byte, []int) {
	return file_database_database_proto_rawDescGZIP(), []int{25}
}

func (x *SolutionResult) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *SolutionResult) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

var File_database_database_proto protoreflect.FileDescriptor

var file_database_database_proto_rawDesc = []byte{
	0x0a, 0x17, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x70, 0x62, 0x22, 0x4f, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x65, 0x53,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x04, 0x43, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x0a,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49,
	0x64, 0x22, 0x71, 0x0a, 0x08, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0c, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x65, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x07, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2e, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x0b, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x08, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x08, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73,
	0x22, 0x7a, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x41, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x5c, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x09,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1e, 0x0a,
	0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x65, 0x0a, 0x10, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x64, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0e, 0x53, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x32, 0xd6, 0x07, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x53,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73,
	0x65, 0x12, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x12,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x12, 0x20, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x70, 0x62, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x1f, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x75,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70,
	0x62, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x70, 0x62, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62,
	0x2e, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x26, 0x5a, 0x24, 0x6f, 0x64, 0x61, 0x2d, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x3b, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_database_database_proto_rawDescOnce sync.Once
	file_database_database_proto_rawDescData = file_database_database_proto_rawDesc
)

func file_database_database_proto_rawDescGZIP() []byte {
	file_database_database_proto_rawDescOnce.Do(func() {
		file_database_database_proto_rawDescData = protoimpl.X.CompressGZIP(file_database_database_proto_rawDescData)
	})
	return file_database_database_proto_rawDescData
}

var file_database_database_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_database_database_proto_goTypes = []any{
	(*Player)(nil),                           // 0: databasepb.Player
	(*CreatePlayerRequest)(nil),              // 1: databasepb.CreatePlayerRequest
	(*GetPlayerRequest)(nil),                 // 2: databasepb.GetPlayerRequest
	(*UpdatePlayerProgressRequest)(nil),      // 3: databasepb.UpdatePlayerProgressRequest
	(*Case)(nil),                             // 4: databasepb.Case
	(*CreateCaseRequest)(nil),                // 5: databasepb.CreateCaseRequest
	(*GetCaseRequest)(nil),                   // 6: databasepb.GetCaseRequest
	(*ListCasesRequest)(nil),                 // 7: databasepb.ListCasesRequest
	(*CaseList)(nil),                         // 8: databasepb.CaseList
	(*PlayerCase)(nil),                       // 9: databasepb.PlayerCase
	(*AssignCaseRequest)(nil),                // 10: databasepb.AssignCaseRequest
	(*GetPlayerCaseRequest)(nil),             // 11: databasepb.GetPlayerCaseRequest
	(*Evidence)(nil),                         // 12: databasepb.Evidence
	(*ListEvidenceRequest)(nil),              // 13: databasepb.ListEvidenceRequest
	(*EvidenceList)(nil),                     // 14: databasepb.EvidenceList
	(*Suspect)(nil),                          // 15: databasepb.Suspect
	(*ListSuspectsRequest)(nil),              // 16: databasepb.ListSuspectsRequest
	(*SuspectList)(nil),                      // 17: databasepb.SuspectList
	(*InterrogationQuestion)(nil),            // 18: databasepb.InterrogationQuestion
	(*GetInterrogationQuestionsRequest)(nil), // 19: databasepb.GetInterrogationQuestionsRequest
	(*InterrogationQuestionList)(nil),        // 20: databasepb.InterrogationQuestionList
	(*Location)(nil),                         // 21: databasepb.Location
	(*ListLocationsRequest)(nil),             // 22: databasepb.ListLocationsRequest
	(*LocationList)(nil),                     // 23: databasepb.LocationList
	(*SolveCaseRequest)(nil),                 // 24: databasepb.SolveCaseRequest
	(*SolutionResult)(nil),                   // 25: databasepb.SolutionResult
}
var file_database_database_proto_depIdxs = []int32{
	4,  // 0: databasepb.CaseList.cases:type_name -> databasepb.Case
	12, // 1: databasepb.EvidenceList.evidence:type_name -> databasepb.Evidence
	15, // 2: databasepb.SuspectList.suspects:type_name -> databasepb.Suspect
	18, // 3: databasepb.InterrogationQuestionList.questions:type_name -> databasepb.InterrogationQuestion
	21, // 4: databasepb.LocationList.locations:type_name -> databasepb.Location
	1,  // 5: databasepb.DatabaseService.CreatePlayer:input_type -> databasepb.CreatePlayerRequest
	2,  // 6: databasepb.DatabaseService.GetPlayer:input_type -> databasepb.GetPlayerRequest
	3,  // 7: databasepb.DatabaseService.UpdatePlayerProgress:input_type -> databasepb.UpdatePlayerProgressRequest
	5,  // 8: databasepb.DatabaseService.CreateCase:input_type -> databasepb.CreateCaseRequest
	6,  // 9: databasepb.DatabaseService.GetCase:input_type -> databasepb.GetCaseRequest
	7,  // 10: databasepb.DatabaseService.ListCases:input_type -> databasepb.ListCasesRequest
	10, // 11: databasepb.DatabaseService.AssignCaseToPlayer:input_type -> databasepb.AssignCaseRequest
	11, // 12: databasepb.DatabaseService.GetPlayerCase:input_type -> databasepb.GetPlayerCaseRequest
	13, // 13: databasepb.DatabaseService.ListEvidence:input_type -> databasepb.ListEvidenceRequest
	16, // 14: databasepb.DatabaseService.ListSuspects:input_type -> databasepb.ListSuspectsRequest
	19, // 15: databasepb.DatabaseService.GetInterrogationQuestions:input_type -> databasepb.GetInterrogationQuestionsRequest
	22, // 16: databasepb.DatabaseService.ListLocations:input_type -> databasepb.ListLocationsRequest
	24, // 17: databasepb.DatabaseService.SolveCase:input_type -> databasepb.SolveCaseRequest
	0,  // 18: databasepb.DatabaseService.CreatePlayer:output_type -> databasepb.Player
	0,  // 19: databasepb.DatabaseService.GetPlayer:output_type -> databasepb.Player
	0,  // 20: databasepb.DatabaseService.UpdatePlayerProgress:output_type -> databasepb.Player
	4,  // 21: databasepb.DatabaseService.CreateCase:output_type -> databasepb.Case
	4,  // 22: databasepb.DatabaseService.GetCase:output_type -> databasepb.Case
	8,  // 23: databasepb.DatabaseService.ListCases:output_type -> databasepb.CaseList
	9,  // 24: databasepb.DatabaseService.AssignCaseToPlayer:output_type -> databasepb.PlayerCase
	9,  // 25: databasepb.DatabaseService.GetPlayerCase:output_type -> databasepb.PlayerCase
	14, // 26: databasepb.DatabaseService.ListEvidence:output_type -> databasepb.EvidenceList
	17, // 27: databasepb.DatabaseService.ListSuspects:output_type -> databasepb.SuspectList
	20, // 28: databasepb.DatabaseService.GetInterrogationQuestions:output_type -> databasepb.InterrogationQuestionList
	23, // 29: databasepb.DatabaseService.ListLocations:output_type -> databasepb.LocationList
	25, // 30: databasepb.DatabaseService.SolveCase:output_type -> databasepb.SolutionResult
	18, // [18:31] is the sub-list for method output_type
	5,  // [5:18] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_database_database_proto_init() }
func file_database_database_proto_init() {
	if File_database_database_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_database_database_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePlayerProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Case); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CaseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AssignCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetPlayerCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Evidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListEvidenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*EvidenceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Suspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ListSuspectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*SuspectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*InterrogationQuestion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetInterrogationQuestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*InterrogationQuestionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ListLocationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*LocationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*SolveCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_database_database_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*SolutionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_database_database_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_database_database_proto_goTypes,
		DependencyIndexes: file_database_database_proto_depIdxs,
		MessageInfos:      file_database_database_proto_msgTypes,
	}.Build()
	File_database_database_proto = out.File
	file_database_database_proto_rawDesc = nil
	file_database_database_proto_goTypes = nil
	file_database_database_proto_depIdxs = nil
}
