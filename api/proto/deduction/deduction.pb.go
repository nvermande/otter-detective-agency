// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: deduction/deduction.proto

package deductionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SolveCaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId     string `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	PlayerId   string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SolutionId string `protobuf:"bytes,3,opt,name=solution_id,json=solutionId,proto3" json:"solution_id,omitempty"`
}

func (x *SolveCaseRequest) Reset() {
	*x = SolveCaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deduction_deduction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolveCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveCaseRequest) ProtoMessage() {}

func (x *SolveCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deduction_deduction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveCaseRequest.ProtoReflect.Descriptor instead.
func (*SolveCaseRequest) Descriptor() ([]byte, []int) {
	return file_deduction_deduction_proto_rawDescGZIP(), []int{0}
}

func (x *SolveCaseRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *SolveCaseRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SolveCaseRequest) GetSolutionId() string {
	if x != nil {
		return x.SolutionId
	}
	return ""
}

type CaseSolution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCorrect   bool   `protobuf:"varint,1,opt,name=is_correct,json=isCorrect,proto3" json:"is_correct,omitempty"`
	Explanation string `protobuf:"bytes,2,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *CaseSolution) Reset() {
	*x = CaseSolution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deduction_deduction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CaseSolution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseSolution) ProtoMessage() {}

func (x *CaseSolution) ProtoReflect() protoreflect.Message {
	mi := &file_deduction_deduction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseSolution.ProtoReflect.Descriptor instead.
func (*CaseSolution) Descriptor() ([]byte, []int) {
	return file_deduction_deduction_proto_rawDescGZIP(), []int{1}
}

func (x *CaseSolution) GetIsCorrect() bool {
	if x != nil {
		return x.IsCorrect
	}
	return false
}

func (x *CaseSolution) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

var File_deduction_deduction_proto protoreflect.FileDescriptor

var file_deduction_deduction_proto_rawDesc = []byte{
	0x0a, 0x19, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x22, 0x69, 0x0a, 0x10, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0c, 0x43, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x5b, 0x0a, 0x10, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x53, 0x6f, 0x6c, 0x76,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x53, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x42, 0x25, 0x5a, 0x23, 0x6f, 0x64, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deduction_deduction_proto_rawDescOnce sync.Once
	file_deduction_deduction_proto_rawDescData = file_deduction_deduction_proto_rawDesc
)

func file_deduction_deduction_proto_rawDescGZIP() []byte {
	file_deduction_deduction_proto_rawDescOnce.Do(func() {
		file_deduction_deduction_proto_rawDescData = protoimpl.X.CompressGZIP(file_deduction_deduction_proto_rawDescData)
	})
	return file_deduction_deduction_proto_rawDescData
}

var file_deduction_deduction_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_deduction_deduction_proto_goTypes = []any{
	(*SolveCaseRequest)(nil), // 0: deductionpb.SolveCaseRequest
	(*CaseSolution)(nil),     // 1: deductionpb.CaseSolution
}
var file_deduction_deduction_proto_depIdxs = []int32{
	0, // 0: deductionpb.DeductionService.SolveCase:input_type -> deductionpb.SolveCaseRequest
	1, // 1: deductionpb.DeductionService.SolveCase:output_type -> deductionpb.CaseSolution
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_deduction_deduction_proto_init() }
func file_deduction_deduction_proto_init() {
	if File_deduction_deduction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deduction_deduction_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SolveCaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deduction_deduction_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CaseSolution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deduction_deduction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deduction_deduction_proto_goTypes,
		DependencyIndexes: file_deduction_deduction_proto_depIdxs,
		MessageInfos:      file_deduction_deduction_proto_msgTypes,
	}.Build()
	File_deduction_deduction_proto = out.File
	file_deduction_deduction_proto_rawDesc = nil
	file_deduction_deduction_proto_goTypes = nil
	file_deduction_deduction_proto_depIdxs = nil
}
